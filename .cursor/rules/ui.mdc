---
description: 
globs: 
alwaysApply: false
---
---
description: 
globs: /**/*.ts,/**/*.tsx
alwaysApply: false
---
- Use Shadcn UI components with proper composition and customization
- Levarage Radix UI primitives for accessible interactive components
- Follow Tailwind CSS class naming conventions and utility patterns
- Implement mobile-first responsive design with Tailwind breakpoints
- Maintain consistent spacing and layout using Tailwind's spacing scale
- Use Tailwind's color system for consistent theming
- Implement dark mode support using Tailwind's dark variant
- Ensure components are accessible following WCAG guidelines
- Keep component styles modular and reusable
- Optimize component bundle size through proper code splitting
- When applying conditional styling, use the `cn` library (e.g., `<div className={cn('bg-background', isActive ? 'text-foreground' : 'text-muted-foreground')}>`) to handle conditional Tailwind CSS classes
- For any logic or algorithm implemented in variables, functions, components, hooks, or helper functions (such as those in `lib/utils`) or any kind that has a logic, algorithm, or conditional, always include comprehensive documentation. Use inline comments or JSDoc to provide explanations, instructions, usage details, and examples